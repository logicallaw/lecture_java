/*
#강의 내용 정리
1.이벤트는 컴포넌트에 리스너 객체를 붙여서 사용한다.
여러 개의 리스너 객체를 붙일 수 있다.
2.마우스 클릭으로 이벤트가 발생하면 해당 이벤트 리스너를 찾아가서 내부 코드가 실행되도록 한다.
3.이벤트 리스너란 컴포넌트에 등록되어야 작동이 가능하다.
4.이벤트가 발생하면 이벤트 객체가 생성되는데
이벤트 처리를 위한 관련 코드는 이벤트 객체내에 대부분 존재한다.
5.만약, 컴포넌트와 이벤트 클래스가 서로 다른 클래스에 독립적으로 있다면,
이벤트 클래스가 컴포넌트에 접근하기 위한 연결 통로가 필요할 것이다.
연결 통로는 이벤트 클래스에서 발생한 이벤트 객체를 매개변수로 받아와서
getSource()를 사용하여 소스 컴포넌트를 리턴받으면 사용할 수 있다.
이때, 리턴 타입은 Object타입이므로 캐스팅하여 사용해야한다.
6.
-ActionEvent:마우스나 엔터 키로 버튼 선택시
-ItemEvent:체크박스 선택 혹은 해제/라디오 버튼/체크박스 메뉴 아이템
-KeyEvent:키
-MouseEvent:마우스 버튼
7.이벤트 리스너란 이벤트를 처리하는 코드이며 클래스로 작성한다.
8.이벤트 리스너 작성할 때 보통 제공되는 인터페이스를 사용하여 작성한다.
이때, 추상메서드들은 모두 오버라이딩을 해야만 한다.
9.MouseListener 인터페이스
-mousePressed():마우스 버튼이 눌러지는 순간.
-mouseReleased():눌러진 마우스 버튼 때지는 순간.
-mouseClicked():누르고 그 마우스 클릭을 그 자리에서 땔때
-mouseEntered():마우스 커서가 컴포넌트 위에 올라가는 순간
-mouseExited():마우스 커서가 컴포넌트 벗어나는 순간.
10.이벤트 리스너 작성 방법:독립 클래스/내부 클래스/익명 클래스
11.독립 클래스:Frame 클래스와 리스너 클래스를 따로 적을 때.
이때는 컴포넌트 접근을 위해 getSource()를 사용해야한다.
주의해야할 점은 리스너를 컴포넌트 안에서 사용한다고 할지라도, 컴포넌트 자체는
지역변수라 사용이 불가능하기 때문에 getSource()를 사용해야한다.

12.내부 클래스:Frame 클래스 안에 리스터 클래스가 존재하는 경우.
이때는 내부 클래스가 리스터 클래스이므로 getSource() 사용할 필요없이
외부 클래스의 멤버를 사용할 수 있게 된다.
또한, 내부 클래스인 리스너 클래스 작성할 때 private 클래스로 선언하는데
이는 애초에 외부에서 해당 리스너 클래스를 쓸 일이 없기 때문에 선언할 때
애초에 private으로 막아놓는것이다.
단, 외부 클래스의 참조자를 받아오고 싶을 때는
클래스명.this를 사용하면 받아 올 수 있다.(이때, 주의해야할 점은 두 클래스 관계는 중첩관계라 상속관계일 때 사용하는 super를 사용하면 안된다)
예를 들면 내부 클래스에 p() 메서드, 외부 클래스에 p()메서드가 있다면, 외부클래스명.this.p()로 호출할 수 있게 된다.

13.익명 클래스:
객체 new 생성자 자리에 클래스 코드를 작성한 클래스를 의미하는 것이다.
익명 클래스는 한번만 사용할 생각으로 사용하며, 따라서 클래스 이름이 필요가 없게되고,
class 예약어도 필요 없고, 언제나 부모가 있는 이벤트 리스너를 사용해야한다.
또한, 익명 클래스도 객체 생성을 위해서는 부모 클래스의 추상 메서드를
모두 오버라이딩해야 사용할 수 있다.
더불어, 익명클래스는 바로 그 자리에서 클래스 코드를 작성하기 때문에
Frame클래스 내부의 멤버를 직접사용할 수 있다.
(스코프 내부에서 선언되었기 때문에 직접사용할 수 있다)

14.어댑터 클래스:인터페이스의 모든 추상 메서드를 미리 오버라이딩한 클래스.
이는 어댑터 클래스를 상속받으면 필요한 메서드만 오버라이딩하면 되기 때문에
피로도가 줄어든다.

*/